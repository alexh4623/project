trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Deploy
  jobs:
  - job: TerraformInit
    displayName: 'Terraform Init and Apply'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x'
        addToPath: true

    - script: |
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash
        . ~/.nvm/nvm.sh
        nvm install node
        nvm use node
        npm install -g terraform
      displayName: 'Install Terraform'

    - script: |
        terraform --version
      displayName: 'Check Terraform version'

    - script: |
        terraform init
      displayName: 'Terraform Init'
    
    - script: |
        terraform plan -out=tfplan -var "instance_count=$(TF_VAR_instance_count)" -var "ami_id=$(TF_VAR_ami_id)" -var "instance_type=$(TF_VAR_instance_type)"
      displayName: 'Terraform Plan'
    
    - script: |
        terraform apply -auto-approve tfplan
      displayName: 'Terraform Apply'

- stage: PostDeploy
  dependsOn: Deploy
  jobs:
  - job: PingTest
    displayName: 'Run Ping Tests'
    steps:
    - script: |
        terraform init
        terraform apply -auto-approve
      displayName: 'Run Ping Tests'