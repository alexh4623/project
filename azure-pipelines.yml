trigger:
- main

pool:
  name: 'aws'
  
variables:
  AWS_REGION: 'eu-west-1'
  AWS_ACCESS_KEY_ID: $(AWS_ID)
  AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_KEY)


stages:
- stage: InstallTerraform
  displayName: 'Install Terraform'
  jobs:
  - job: InstallTerraform
    displayName: 'Install Terraform'
    pool:
      name: 'aws'

    steps:
    - script: |
        # Install unzip utility
        sudo apt-get update
        sudo apt-get install -y unzip

        # Download Terraform binary
        curl -fsSL https://releases.hashicorp.com/terraform/1.7.5/terraform_1.7.5_linux_amd64.zip -o terraform.zip
        
        # Unzip Terraform binary
        unzip terraform.zip

        # Move Terraform binary to /usr/local/bin directory (you might need sudo privileges)
        sudo mv terraform /usr/local/bin/terraform

        # Verify Terraform installation
        terraform --version
      displayName: 'Install Terraform'

- stage: Deploy
  jobs:
  - job: TerraformInit
    displayName: 'Terraform Init and Apply'
    steps: 
    - script: |
        cd ~/myagent/_work/1/s/infra
        terraform --version
      displayName: 'Check Terraform version'

    - script: |
        cd ~/myagent/_work/1/s/infra
        terraform init
      displayName: 'Terraform Init'
    
    - script: |
        cd ~/myagent/_work/1/s/infra
        terraform import aws_key_pair.deployer deployer
        terraform import aws_ssm_parameter.admin_password[0] admin_password_0
        terraform import aws_ssm_parameter.admin_password[1] admin_password_1
        terraform import aws_ssm_parameter.admin_password[2] admin_password_2
        terraform apply -auto-approve
        terraform output -json > terraform_output.json
        #!/bin/bash
        IPs=$(jq -r '.instance_ips.value[]' terraform_output.json)
    
        echo "[servers]" > inventory.ini
        for ip in $IPs; do
          echo "$ip" >> inventory.ini
        done
        echo "this is inventory.ini"
        cat inventory.ini
        echo "this is terraform.json"
        cat terraform_output.json  # Display the JSON for debugging
      env:
        AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
        AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
        AWS_DEFAULT_REGION: $(AWS_REGION)
      displayName: 'Terraform Apply'  
      
- stage: Configure
  dependsOn: Deploy
  jobs:
  - job: Ansible
    displayName: 'Run Ansible Playbook'
    steps:

    - script: |
        # Install Ansible
          sudo apt-get update
          sudo apt-get install -y software-properties-common
          sudo apt-add-repository --yes --update ppa:ansible/ansible
          sudo apt-get install -y ansible
          ansible --version
      displayName: 'Install Ansible'

    - script: |
        ansible-playbook -i inventory.ini playbook.yml
      displayName: 'Run Ansible Playbook'