trigger:
- main

pool:
  vmImage: 'aws'
  
variables:
  AWS_REGION: 'eu-west-1'
  AWS_ACCESS_KEY_ID: $(awsAccessKeyId)
  AWS_SECRET_ACCESS_KEY: $(awsSecretAccessKey)


stages:
- stage: Deploy
  jobs:
  - job: TerraformInit
    displayName: 'Terraform Init and Apply'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x'
        addToPath: true

    - script: |
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash
        . ~/.nvm/nvm.sh
        nvm install node
        nvm use node
        npm install -g terraform
      displayName: 'Install Terraform'

    - script: |
        terraform --version
      displayName: 'Check Terraform version'

    - script: |
        terraform init
      displayName: 'Terraform Init'
    
    - script: |
        terraform apply -auto-approve
      displayName: 'Terraform Apply'

    - script: |
        echo '[all]' > hosts
        terraform output -json instance_ips | jq -r '.[]' | awk '{print $1 " ansible_user=ec2-user"}' >> hosts
      displayName: 'Generate Ansible hosts file'
      
- stage: Configure
  dependsOn: Deploy
  jobs:
  - job: Ansible
    displayName: 'Run Ansible Playbook'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x'
        addToPath: true

    - script: |
        sudo apt-get update
        sudo apt-get install -y software-properties-common
        sudo apt-add-repository --yes --update ppa:ansible/ansible
        sudo apt-get install -y ansible
        ansible --version
      displayName: 'Install Ansible'

    - script: |
        ansible-playbook -i hosts playbook.yml
      displayName: 'Run Ansible Playbook'